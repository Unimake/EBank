// Summary: Autentica na API Unimake e retorna o token de acesso
// Syntax:
//[ <Result> = ] AutenticarAPI ()
// Return value: Variant contendo os dados do JSON retornado
// Throws: Exception em caso de falha na requisição ou erro de resposta

PROCEDURE AutenticarAPI()

// -----------------------------------------------------------------------------------
// Autenticar API Unimake
// -----------------------------------------------------------------------------------

sURL			is string
sJsonContent	is string
sResponse		is string
httpRequest		is httpRequest
httpResponse	is httpResponse
vJson			is Variant

WHEN EXCEPTION IN
	// Define a URL da API Produção
	sURL			= "https://unimake.app/auth/api/auth"
	// Define a URL do SandBOX (descomente se necessário)
	// sURL = "https://auth.sandbox.unimake.software/api/auth"
	
	// Cria o conteúdo da requisição no formato JSON
	sJsonContent	= [
		{
		"appId": "8f6998b1ee1746d8b0836611a15644c1",
		"secret": "346504a5800047b683c11888c607ac67"
		}
	]
	
	// Configura a requisição HTTP
	httpRequest..URL			= sURL
	httpRequest..Method			= httpPost
	httpRequest..ContentType	= "application/json"
	httpRequest..Content		= sJsonContent
	
	// Envia a requisição
	httpResponse				= HTTPSend(httpRequest)
	
	// Verifica o status da resposta
	IF httpResponse..StatusCode <> 200 THEN
		// Lança uma exceção com o erro detalhado
		ExceptionThrow(1, "Falha na requisição HTTP " + httpResponse..StatusCode + CR + StringBuild(httpResponse..Content))	
	END
	
	// Captura o conteúdo da resposta
	sResponse	= StringBuild(httpResponse..Content)
	
	// Tenta decodificar o JSON
	vJson		= JSONToVariant(sResponse)
	
	// Valida os campos esperados
	IF vJson.token = Null THEN
		ExceptionThrow(3,"Campo 'token' não encontrato no JSON de resposta.")
	END
	
	IF vJson.expiration = Null THEN
		ExceptionThrow(4,"Campo 'expiration' não encontrado no JSON de resposta.")
	END
	
	// Retorna o JSON completo (token + expiration)
	RESULT vJson	
DO
	ExceptionPropagate()
END
